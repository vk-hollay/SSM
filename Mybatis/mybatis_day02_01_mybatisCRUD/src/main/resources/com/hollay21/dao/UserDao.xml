<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hollay21.dao.UserDao">

    <!--配置 查询结果的列名和实体类的属性名的对应关系 -->
    <resultMap id="userMap" type="User">
        <!--主键字段的对应-->
        <id property="id" column="id"></id>
        <!--非主键字段的对应-->
        <result property="username" column="username"></result>
        <result property="address" column="address"></result>
        <result property="sex" column="sex"></result>
        <result property="birthday" column="birthday"></result>
    </resultMap>


    <!--查询所有-->
    <select id="findAll"  resultMap="userMap">
        select * from user;
    </select>

    <!--保存用户-->
    <insert id="saveUser" parameterType="com.hollay21.domain.User">
        <!--配置插入操作后，获取插入数据的id--> <!--keyProperty代表要返回的值在实体类中的名称，
        keyColumn代表在数据表中的属性名称 ，order="AFTER"代表是插入后的行为-->
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex, birthday) values(#{username},#{address},#{sex},#{birthday});
    </insert>

    <!--更新用户-->
    <update id="updateUser" parameterType="com.hollay21.domain.User">
        update user set username=#{username},address=#{address},sex=#{sex} where id=#{id};
    </update>

    <!--删除用户-->
    <delete id="deleteUser" parameterType="integer">
        delete from user where id=#{userId};
    </delete>

    <!--根据id查询用户信息-->
    <select id="findById" parameterType="int" resultType="User">
        select * from user where id=#{id};
    </select>

    <!--根据名称模糊查询用户信息 两种写法：-->
    <!--第一种 更常用 底层使用的是  PreparedStatement  ?占位符方式-->
    <select id="findByName1" parameterType="string" resultType="com.hollay21.domain.User">
        select * from user where username like #{username};
    </select>
    <!--第二种 底层使用的是 Statement 字符串拼接 SQL语句的方法-->
    <select id="findByName2" parameterType="string" resultType="com.hollay21.domain.User">
        select * from user where username like '%${value}%';
    </select>

    <!--查询总用户数-->
    <select id="findTotal" resultType="int">
        select count(id) from user;
    </select>

    <!--根据QueryVo中的条件查询用户-->
    <select id="findUserByVo" parameterType="com.hollay21.domain.QueryVo" resultType="com.hollay21.domain.User">
        select * from user where username like #{user.username}
    </select>
</mapper>